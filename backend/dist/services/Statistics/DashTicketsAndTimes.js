'use strict';
function a() {
    const z = [
        'E\x20\x27open\x27\x20O',
        'nda_ativa,',
        't.\x22closedA',
        'e\x20and\x20:end',
        'anda_ativa',
        ')\x20a\x0a\x20\x20\x20\x20--',
        '.\x22type\x22\x20LI',
        'mp)::inter',
        'ceivedTran',
        '\x20:startDat',
        'lect\x20count',
        'AGE(to_tim',
        '\x20else\x200\x20en',
        'tDate\x20and\x20',
        '\x22isActiveD',
        '\x22\x20=\x20:userI',
        'tartedAtte',
        '\x20\x20\x20where\x0a\x20',
        ':decimal,0',
        'type',
        'emanda_ati',
        '\x20\x20\x20\x20)\x20new_',
        'nterval\x20TM',
        't\x0a\x20\x20\x20\x20INNE',
        'startDate',
        'a\x0a\x20\x20\x20\x20\x20\x20or',
        '),\x200),\x20\x27mi',
        'nantId\x0a\x20\x20\x20',
        'estamp(t.\x22',
        'al)/60\x20tme',
        'startedAtt',
        'tc.\x22userId',
        'nd\x20qtd_dem',
        '\x20--ROUND(A',
        'tween\x20:sta',
        '\x20\x20and\x20(lt.',
        '\x20t\x0a\x20\x20\x20\x20INN',
        'al_atendim',
        'te\x20and\x20:en',
        'ot\x20true\x20th',
        '__esModule',
        '\x22\x20=\x20tc.\x22id',
        'entos,\x0a\x20\x20\x20',
        't.\x22created',
        '\x27month\x27,\x20t',
        '\x20\x20\x20\x20\x20\x20and\x20',
        'eceivedTra',
        'danceAt,\x0a\x20',
        '\x200\x20end\x20qtd',
        'tendanceAt',
        'G(tme)::de',
        'dDate\x0a\x20\x20\x20\x20',
        '22520MgOFtN',
        '\x20\x20\x20and\x20(lt',
        '\x20date_trun',
        'rder\x20by\x201\x20',
        'At\x22)::inte',
        'group\x20by\x20d',
        '\x0a\x20\x20\x20\x20\x20\x20cas',
        'tma,\x0a\x20\x20\x20\x20\x20',
        '\x22/1000)\x20st',
        'emand\x22\x20is\x20',
        '(\x27month\x27,\x20',
        'ltc\x20ON\x20ltc',
        'R\x20JOIN\x20\x22Lo',
        '13518xOwpsO',
        'query',
        'At\x22)\x20dt_re',
        '(1)\x0a\x20\x20\x20\x20\x20\x20',
        'ptiva,\x0a\x20\x20\x20',
        'eceptiva,\x0a',
        '\x20\x20\x20)\x20new_c',
        '__importDe',
        'ncat(ROUND',
        'NNER\x20JOIN\x20',
        '\x20\x20\x20\x20where\x0a',
        'Desc\x0a',
        '_referenci',
        'timestamp(',
        '\x20\x20\x20\x20\x201\x20qtd',
        '\x20=\x20c.\x22id\x22\x0a',
        'esc\x0a',
        'not\x20true\x20t',
        'reatedAt\x22,',
        'artedAtten',
        'ER\x20JOIN\x20\x22L',
        '--ROUND(AV',
        'ect\x0a\x20\x20\x20\x20\x20\x20',
        '0\x20end\x20qtd_',
        'ndimentos,',
        '3668764tKTgsD',
        'contactId\x22',
        'tedAt\x22)\x20be',
        'acts\x22\x20c\x0a\x20\x20',
        '_total_ate',
        '\x0a\x20\x20\x20\x20\x20\x20and',
        'rval)/60\x20t',
        '\x22tenantId\x22',
        '\x20lt\x20ON\x20lt.',
        'admin',
        '\x20:endDate\x0a',
        'ogTickets\x22',
        'roup\x20by\x20dt',
        'e\x20when\x20t.\x22',
        '\x20\x20\x20\x20to_tim',
        '\x20=\x20t.\x22id\x22\x0a',
        '\x20TMA,\x0a\x20\x20\x20\x20',
        'gTickets\x22\x20',
        '\x20\x20\x20\x20\x20\x20\x20\x20c.',
        'eatedAt\x22,\x0a',
        'TMA,\x0a\x20\x20\x20\x20c',
        '(\x27day\x27,\x20t.',
        'a,\x0a\x20\x20\x20\x20sum',
        't\x22/1000)\x20c',
        'rom\x20AGE(to',
        '\x20\x20\x20\x20extrac',
        'ontacts\x0a\x20\x20',
        '\x27,\x20c.\x22crea',
        'imestamp(t',
        '\x20c\x0a\x20\x20\x20\x20\x20\x20I',
        'ndanceAt\x22/',
        'decimal,0)',
        '\x20\x20\x20\x20\x20\x20to_t',
        'endanceAt\x22',
        't\x22)\x20dt_ref',
        'endDate',
        '5320191LoEbrj',
        'R\x20lt.\x22type',
        ',\x0a\x20\x20\x20\x20\x20\x20t.',
        'ct\x0a\x20\x20\x20\x20\x20\x20d',
        '.\x22ticketId',
        'mand\x22\x20is\x20n',
        '\x22/1000)\x20cl',
        'demanda_re',
        '\x22Tickets\x22\x20',
        'nantId\x22\x20=\x20',
        'true\x20then\x20',
        'createdAt\x22',
        '\x22ticketId\x22',
        '\x20and\x20date_',
        'erval)/60\x20',
        'oalesce(co',
        '_timestamp',
        't\x22)\x20betwee',
        'default',
        's)\x20qtd_tot',
        'GE(to_time',
        'At\x22/1000),',
        'manda_ativ',
        'da_recepti',
        '.\x22closedAt',
        '\x20extract(e',
        'cimal,0)\x20T',
        'och\x20from\x20A',
        '\x20:tenantId',
        'umUrf',
        '10747786hWwDCv',
        'KE\x20\x27open\x27\x20',
        'lt\x20ON\x20lt.\x22',
        'ia\x0a\x20\x20\x20\x20\x20\x20o',
        'userId',
        'ere\x0a\x20\x20\x20\x20\x20\x20',
        '\x20\x20--ROUND(',
        '\x0a\x20\x20\x20\x20from\x20',
        '9001680ktyXvY',
        '(qtd_deman',
        '\x22startedAt',
        'd\x20qtd_dema',
        'c.\x22id\x22))\x0a\x20',
        'se\x20when\x20t.',
        'osedAt,\x0a\x20\x20',
        'en\x201\x20else\x20',
        'ceptiva,\x0a\x20',
        'userId\x0a\x20\x20\x20',
        '.\x22createdA',
        '\x22type\x22\x20LIK',
        'fault',
        'ate_trunc(',
        'rtDate\x20and',
        '=\x20t.\x22id\x22\x0a\x20',
        'ferencia,\x0a',
        'dAt\x22)::int',
        '\x20\x20\x20--ROUND',
        '../../data',
        '\x20\x20\x20\x20\x20\x20t.\x22c',
        'Date\x0a\x20\x20\x20\x20\x20',
        ')::decimal',
        '\x20\x20c.\x22tenan',
        '\x20\x20\x20\x20--dt_r',
        '\x20\x20\x20\x20\x20\x20t.\x22t',
        'enantId\x22\x20=',
        't_referenc',
        '::timestam',
        ')\x20TMA,\x0a\x20\x20\x20',
        ':tenantId\x0a',
        'tenantId',
        'e,\x0a\x20\x20\x20\x20\x20\x20t',
        '\x22\x20LIKE\x20\x27re',
        'erencia,\x0a\x20',
        '\x20\x20\x20\x20\x20and\x20l',
        '(distinct(',
        'OR\x20lt.\x22typ',
        '\x20\x20\x20\x20\x20from\x20',
        'date_trunc',
        'eferencia,',
        '\x22\x0a\x20\x20\x20\x20from',
        'ct(epoch\x20f',
        '(AVG(tme):',
        '\x20\x22Tickets\x22',
        ',\x0a\x20\x20\x20\x20\x20\x20ca',
        'ticketId\x22\x20',
        '\x0a\x20\x20\x20\x20\x20\x20to_',
        '(t.\x22closed',
        '(AVG(tma):',
        'n\x20:startDa',
        'tendimento',
        'hen\x201\x20else',
        'ween\x20:star',
        'om\x20AGE(to_',
        'c(\x27day\x27,\x20t',
        ',0),\x200),\x20\x27',
        'td_total_a',
        '/1000)\x20sta',
        '6RsWPgs',
        '\x20\x20\x20\x20\x20\x20INNE',
        '\x22Contacts\x22',
        't\x22/1000),\x20',
        '.\x22tenantId',
        'serId\x22\x20=\x20:',
        '\x20\x20\x20\x20\x20t.\x22cr',
        '(\x0a\x20\x20\x20\x20sele',
        '\x22\x0a\x20\x20\x20\x20\x20\x20wh',
        'edAt\x22)\x20bet',
        'sequelize',
        '\x20sum(qtd_d',
        'defineProp',
        'contacts\x0a\x20',
        't(epoch\x20fr',
        'concat(ROU',
        '\x22createdAt',
        'from\x20\x22Cont',
        'erty',
        'losedAt,\x0a\x20',
        '\x20\x20\x20\x20\x20\x201\x20qt',
        '1000),\x20t.\x22',
        'e\x22\x20LIKE\x20\x27r',
        'ecimal,0)\x20',
        '\x20coalesce(',
        'base',
        '\x0a\x20\x20select\x0a',
        '_demanda_r',
        'tc\x20ON\x20tc.\x22',
        'replacemen',
        'stamp(t.\x22s',
        '\x20t.\x22create',
        'ueeSE',
        '1\x20else\x200\x20e',
        'VG(tme)::d',
        'ND(AVG(tma',
        'E,\x0a\x20\x20\x20\x20(se',
        '\x20=\x20:tenant',
        'runc(\x27day\x27',
        'SELECT',
        '\x22::timesta',
        '/1000),\x20t.',
        'extract(ep',
        'p)::interv',
        'rue\x20then\x201',
        ',\x20c.\x22creat',
        'poch\x20from\x20',
        'Id\x0a\x20\x20\x20\x20\x20\x20\x20',
        '\x22)\x20between',
        '50933hkuAYz',
        'isActiveDe',
        'd\x0a\x20\x20\x20\x20\x20\x20\x20\x20',
        'value',
        ':interval\x20',
        'ME\x0a\x20\x20from\x20',
        'minutes\x27):',
        'and\x20date_t',
        'endimentos',
        '2QHRAvY',
        '\x20a\x0a\x20\x20\x20\x20--g',
        '439920EzHXve',
        'TME\x0a\x20\x20from',
        'ma,\x0a\x20\x20\x20\x20\x20\x20',
        'rtedAttend',
        '\x0a\x20\x20\x20\x20sum(q',
        'nutes\x27)::i',
        '\x20and\x20lt.\x22u',
        'nsfer\x27)\x0a\x20\x20',
        'val)/60\x20tm',
        'tId\x22\x20=\x20:te',
        'mestamp(t.',
        '\x20\x20\x20\x20\x20t.\x22te',
        '\x20\x20\x20\x20\x20extra',
        '\x20(\x0a\x20\x20\x20\x20sel',
        'trunc(\x27day',
        'sfer\x27)\x0a\x20\x20)',
        'va)\x20qtd_de',
        'd_total_at',
        'manda_rece',
        'anceAt,\x0a\x20\x20',
        'der\x20by\x201\x20D',
        '\x20\x20\x20\x20\x20to_ti',
        'mand\x22\x20is\x20t',
        ':endDate\x0a\x20',
        'AVG(tma)::',
        'QueryTypes'
    ];
    a = function () {
        return z;
    };
    return a();
}
const u = b, v = b;
(function (c, d) {
    const s = b, t = b, e = c();
    while (!![]) {
        try {
            const f = parseInt(s(0xf6)) / (-0x1588 + -0x1c4a + 0x9f7 * 0x5) + -parseInt(s(0xff)) / (0x85f * -0x1 + -0x250c + 0x2d6d) * (-parseInt(t(0x199)) / (0x1577 + -0x190c + 0x398)) + -parseInt(t(0x175)) / (-0x237d + -0x758 + 0x2ad9) + -parseInt(s(0x1bf)) / (-0x10a * -0x15 + -0x2114 + 0xb47) * (-parseInt(s(0xc5)) / (-0x20b1 * 0x1 + 0x182e + 0x889)) + parseInt(s(0x1b7)) / (-0x3 * 0x20f + 0x2 * 0x5ad + 0x1 * -0x526) + parseInt(s(0x101)) / (0xfb2 + -0x1bc * 0x9 + 0x1 * -0xe) + parseInt(t(0x15c)) / (0x259f + 0x178f * 0x1 + -0x3d25) * (-parseInt(s(0x14f)) / (-0x18e8 + 0x9dd + 0x3 * 0x507));
            if (f === d)
                break;
            else
                e['push'](e['shift']());
        } catch (g) {
            e['push'](e['shift']());
        }
    }
}(a, -0x7ed2 + 0xfd40c + -0x15d9b));
function b(c, d) {
    const e = a();
    return b = function (f, g) {
        f = f - (0x1 * 0x211f + -0x19ec + -0x699);
        let h = e[f];
        return h;
    }, b(c, d);
}
var __importDefault = this && this[u(0x163) + u(0x1cb)] || function (c) {
    const w = v;
    return c && c[w(0x143)] ? c : { 'default': c };
};
const k = {};
k[u(0xf9)] = !![], Object[u(0xd1) + u(0xd7)](exports, u(0x143), k);
const sequelize_1 = require(v(0xcf)), database_1 = __importDefault(require(v(0x9d) + u(0xde))), query = u(0xdf) + v(0xa2) + u(0xb2) + u(0x105) + u(0xc3) + u(0xbd) + u(0x1ac) + v(0x140) + u(0x145) + u(0xd0) + v(0x12f) + v(0x111) + u(0x1af) + v(0x18b) + v(0x1c0) + v(0x1b0) + v(0x111) + u(0x113) + u(0x160) + v(0xdd) + v(0xd4) + v(0xe8) + v(0xa0) + u(0xc2) + v(0xfc) + v(0xfa) + v(0x189) + u(0x1a8) + u(0x164) + v(0xb5) + v(0x12d) + v(0x135) + u(0x106) + v(0x131) + u(0xe9) + v(0x125) + v(0xae) + u(0x1c3) + u(0xb0) + u(0xc7) + u(0x192) + v(0x165) + v(0x1a1) + v(0xe1) + v(0x176) + v(0x16b) + v(0xc6) + v(0x15b) + u(0x186) + v(0x15a) + u(0x19d) + u(0x144) + u(0xcd) + u(0x1bc) + u(0xa1) + v(0x10a) + v(0x136) + u(0xad) + u(0x13a) + u(0x12a) + u(0xf8) + u(0xfd) + u(0xeb) + v(0xf2) + v(0xce) + v(0xbf) + u(0x128) + v(0x118) + u(0x162) + v(0x18f) + v(0x1bd) + v(0x119) + v(0x194) + u(0x185) + v(0x171) + u(0x14d) + v(0x1b3) + v(0xfb) + u(0xcc) + v(0x19c) + u(0x1cc) + v(0x147) + v(0x1c9) + u(0x197) + u(0xac) + u(0x16a) + v(0x179) + u(0x174) + v(0x155) + v(0x182) + u(0xf7) + u(0x117) + u(0xf1) + v(0x127) + u(0x1c2) + v(0x11c) + v(0x155) + u(0x182) + u(0xf7) + u(0x19e) + (v(0x142) + u(0x1c6) + u(0x173) + u(0x1a0) + u(0x1c7) + u(0xcb) + u(0x188) + u(0x195) + v(0x191) + u(0x1b1) + v(0x19f) + v(0x1c5) + u(0x183) + u(0x137) + v(0x139) + v(0x196) + u(0xc4) + v(0x104) + v(0x114) + u(0x18e) + v(0xd3) + u(0xc0) + v(0x169) + v(0x11d) + u(0xc8) + u(0x146) + u(0x153) + v(0x17b) + u(0x103) + u(0xef) + v(0x1b4) + u(0x1ad) + v(0xe3) + v(0x12b) + u(0x193) + u(0xda) + v(0x1a4) + v(0xa6) + v(0xf0) + u(0x138) + v(0x19b) + v(0x17c) + u(0x1be) + u(0x1a1) + u(0x132) + v(0x15b) + u(0x186) + v(0x1b9) + u(0xb8) + v(0x1ce) + v(0x12c) + v(0x10c) + u(0x1a2) + v(0xa8) + v(0x148) + u(0xb1) + v(0x18a) + v(0xd5) + v(0xf5) + u(0x124) + u(0x11e) + u(0x9f) + u(0x107) + u(0xca) + v(0x1c8) + u(0x150) + v(0x121) + u(0x1b8) + v(0xaf) + u(0xdb) + u(0x149) + v(0x108) + u(0x120) + u(0x154) + v(0xa5) + u(0x1ba) + u(0x152) + u(0x167)), queryAdmin = u(0xdf) + v(0xa2) + v(0xb2) + u(0x105) + v(0xc3) + u(0xbd) + v(0x1ac) + v(0x140) + v(0x145) + u(0xd0) + v(0x12f) + u(0x111) + u(0x1af) + v(0x18b) + v(0x1c0) + u(0x1b0) + u(0x111) + u(0x113) + u(0x160) + v(0xdd) + u(0xd4) + v(0xe8) + u(0xa0) + u(0xc2) + u(0xfc) + v(0xfa) + u(0x189) + v(0x1a8) + v(0x164) + u(0xb5) + u(0x12d) + v(0x135) + u(0x106) + v(0x131) + u(0xe9) + u(0x125) + u(0x15f) + u(0xd6) + v(0x178) + u(0x166) + u(0x187) + u(0x17c) + v(0xea) + v(0xf4) + v(0x1a6) + v(0x10f) + v(0x190) + u(0x177) + u(0x13d) + v(0x1cd) + u(0x17f) + v(0x130) + u(0xd2) + u(0x9c) + v(0xbb) + u(0x12d) + u(0xa7) + v(0x13c) + u(0xe7) + v(0xdc) + u(0x102) + v(0x10e) + u(0x172) + u(0xb1) + u(0x159) + u(0x146) + u(0x15e) + u(0x9a) + v(0xd9) + u(0x112) + u(0xfe) + u(0xb7) + u(0x1c4) + v(0x129) + u(0x158) + v(0x1a3) + u(0xe6) + v(0x13b) + v(0x11f) + u(0xb7) + v(0x1c4) + v(0x129) + v(0x158) + u(0x16d) + v(0xbe) + v(0x14b) + u(0xe0) + v(0x161) + u(0x9e) + u(0x16e) + v(0xb9) + v(0x169) + u(0x11d) + u(0x18c) + u(0xd8) + u(0x116) + v(0x10b) + v(0x1c1) + v(0x14c) + v(0x157) + (v(0x16f) + v(0x14a) + v(0x10d) + u(0xb4) + v(0x18d) + u(0x1a9) + u(0xba) + u(0x1ae) + v(0xe4) + v(0x9b) + v(0x1a7) + v(0x156) + u(0x1b2) + u(0xf3) + v(0x126) + v(0x137) + v(0x139) + v(0x196) + v(0xee) + u(0xd5) + v(0xed) + v(0x122) + u(0x109) + v(0xaa) + u(0xc9) + u(0xb3) + u(0xb6) + v(0x13f) + u(0x170) + v(0x180) + u(0x17d) + u(0x1a5) + v(0x184) + v(0x166) + v(0xa3) + u(0xa4) + v(0x1b5) + v(0x17a) + u(0x151) + u(0xc1) + v(0x1c9) + u(0x1aa) + v(0xbc) + v(0x141) + u(0x14e) + u(0x13e) + v(0x1ca) + u(0x11b) + v(0x19a) + u(0xab) + u(0x123) + u(0x110) + v(0x100) + u(0x181) + u(0x168) + v(0x134) + u(0x115) + v(0x16c)), DashTicketsAndTimes = async ({
        startDate: f,
        endDate: g,
        tenantId: h,
        userId: i,
        userProfile: j
    }) => {
        const x = u, y = u, l = {};
        l[x(0xe5)] = function (q, r) {
            return q == r;
        }, l[x(0x1b6)] = y(0x17e);
        const m = l, n = {};
        n[y(0xa9)] = h, n[y(0x133)] = f, n[x(0x198)] = g, n[x(0x1bb)] = i;
        const o = {};
        o[x(0xe2) + 'ts'] = n, o[y(0x12e)] = sequelize_1[y(0x11a)][y(0xec)];
        const p = await database_1[x(0x1ab)][x(0x15d)](m[x(0xe5)](j, m[x(0x1b6)]) ? queryAdmin : query, o);
        return p;
    };
exports[u(0x1ab)] = DashTicketsAndTimes;
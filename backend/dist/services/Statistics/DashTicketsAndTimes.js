'use strict';
const u = b, v = b;
(function (c, d) {
    const s = b, t = b, e = c();
    while (!![]) {
        try {
            const f = -parseInt(s(0x20a)) / (0x1f * -0x10b + 0xe6f + 0x11e7) + -parseInt(s(0x23f)) / (0x19b3 + -0x1 * 0xf06 + -0xaab) + -parseInt(t(0x1ef)) / (-0x1e3e + -0x1 * -0x179b + 0x2e * 0x25) * (parseInt(t(0x17f)) / (-0xd * -0x224 + 0x59 * 0x6f + -0x4267)) + -parseInt(t(0x1f5)) / (0x233 * -0x1 + 0x12a * 0x5 + -0x39a) * (-parseInt(t(0x173)) / (-0x16f * 0x12 + -0x14b6 + 0x1 * 0x2e8a)) + parseInt(s(0x1e4)) / (-0x9b9 + -0x1 * -0x16ba + -0x16 * 0x97) + parseInt(t(0x188)) / (-0x1a2c + 0x18d + -0x1 * -0x18a7) * (parseInt(s(0x163)) / (-0x233 + -0x11b4 + 0xe8 * 0x16)) + parseInt(t(0x24e)) / (0x252a + -0x789 + -0x9dd * 0x3);
            if (f === d)
                break;
            else
                e['push'](e['shift']());
        } catch (g) {
            e['push'](e['shift']());
        }
    }
}(a, 0x602ad + -0x1 * 0x59b1b + -0x13 * -0x2377));
var __importDefault = this && this[u(0x15e) + v(0x1cc)] || function (c) {
    const w = u;
    return c && c[w(0x20e)] ? c : { 'default': c };
};
const k = {};
k[u(0x255)] = !![], Object[v(0x1bb) + u(0x18a)](exports, v(0x20e), k);
const sequelize_1 = require(v(0x273)), database_1 = __importDefault(require(u(0x20d) + u(0x174))), query = v(0x244) + v(0x283) + u(0x1ab) + u(0x1ff) + v(0x219) + u(0x1e1) + u(0x267) + u(0x232) + u(0x1f7) + u(0x1c0) + v(0x16e) + v(0x1b2) + u(0x16a) + u(0x192) + v(0x215) + u(0x27f) + v(0x1b2) + v(0x268) + v(0x1b7) + v(0x160) + v(0x217) + u(0x1f3) + v(0x252) + v(0x231) + v(0x1e7) + v(0x282) + u(0x1f9) + u(0x1cf) + u(0x253) + v(0x226) + v(0x20f) + v(0x16c) + u(0x19f) + u(0x228) + v(0x19e) + u(0x261) + v(0x166) + u(0x15a) + v(0x199) + v(0x18e) + v(0x182) + u(0x169) + v(0x1cd) + v(0x27b) + u(0x214) + v(0x155) + v(0x1af) + v(0x159) + v(0x285) + v(0x220) + v(0x1ed) + u(0x154) + u(0x1d5) + u(0x23d) + v(0x1cb) + v(0x1a2) + v(0x17e) + u(0x1c2) + v(0x1e9) + v(0x202) + v(0x1f4) + u(0x250) + u(0x168) + u(0x27e) + u(0x260) + v(0x251) + u(0x1d1) + u(0x1e8) + v(0x180) + v(0x167) + v(0x1b8) + u(0x1d7) + v(0x222) + v(0x242) + v(0x238) + u(0x1a1) + v(0x1f0) + u(0x1dd) + u(0x17c) + u(0x203) + u(0x187) + u(0x16b) + u(0x1aa) + u(0x208) + u(0x1ca) + v(0x279) + v(0x1c5) + u(0x17d) + v(0x22d) + v(0x190) + v(0x18d) + v(0x272) + v(0x21e) + v(0x1fa) + u(0x21d) + u(0x258) + u(0x22d) + u(0x190) + v(0x18d) + u(0x204) + (v(0x233) + v(0x1d3) + u(0x269) + u(0x1df) + v(0x15f) + v(0x26f) + v(0x210) + v(0x186) + u(0x24d) + u(0x1c3) + u(0x17a) + u(0x15b) + u(0x161) + v(0x1d9) + u(0x1d4) + v(0x189) + u(0x1c6) + v(0x247) + v(0x200) + u(0x24b) + u(0x184) + u(0x178) + v(0x191) + u(0x1c9) + u(0x266) + u(0x18f) + v(0x1e3) + v(0x1f2) + v(0x25b) + v(0x1fe) + v(0x256) + u(0x22f) + u(0x157) + u(0x249) + u(0x1ec) + u(0x22c) + u(0x185) + v(0x1b9) + u(0x177) + v(0x26a) + v(0x209) + v(0x227) + u(0x198) + v(0x1cd) + v(0x1c7) + v(0x159) + u(0x285) + u(0x230) + v(0x19d) + u(0x196) + v(0x248) + v(0x158) + u(0x23a) + v(0x1da) + u(0x229) + v(0x277) + u(0x19b) + u(0x257) + u(0x21b) + u(0x1d2) + v(0x245) + v(0x1e5) + u(0x27d) + u(0x278) + v(0x1b5) + u(0x1ea) + u(0x22b) + u(0x276) + v(0x1f1) + u(0x221) + v(0x27a) + u(0x1a7) + u(0x1ad) + v(0x21a) + v(0x1a4) + v(0x1b1) + v(0x1a8) + u(0x25c)), queryAdmin = u(0x244) + v(0x283) + u(0x1ab) + v(0x1ff) + u(0x219) + u(0x1e1) + v(0x267) + v(0x232) + u(0x1f7) + u(0x1c0) + u(0x16e) + u(0x1b2) + v(0x16a) + v(0x192) + u(0x215) + v(0x27f) + v(0x1b2) + v(0x268) + u(0x1b7) + u(0x160) + u(0x217) + u(0x1f3) + u(0x252) + u(0x231) + u(0x1e7) + v(0x282) + v(0x1f9) + v(0x1cf) + u(0x253) + u(0x226) + u(0x20f) + u(0x16c) + v(0x19f) + v(0x228) + v(0x19e) + u(0x261) + v(0x1c4) + v(0x1b0) + u(0x213) + u(0x26b) + v(0x24c) + v(0x227) + u(0x18c) + u(0x246) + v(0x239) + v(0x1bd) + u(0x1e0) + v(0x20b) + v(0x264) + u(0x25d) + v(0x23e) + u(0x212) + v(0x1ae) + u(0x263) + u(0x275) + v(0x20f) + u(0x236) + v(0x1a5) + u(0x164) + v(0x23b) + v(0x151) + v(0x17b) + u(0x156) + u(0x277) + u(0x235) + u(0x18f) + v(0x1d6) + v(0x1e6) + u(0x1c1) + u(0x280) + v(0x240) + v(0x1a9) + u(0x25a) + v(0x26c) + v(0x1be) + u(0x211) + v(0x1d8) + v(0x1a3) + v(0x16f) + v(0x1a9) + v(0x25a) + v(0x26c) + v(0x1be) + v(0x23c) + v(0x1f6) + u(0x1ce) + v(0x15d) + u(0x1c8) + u(0x1a0) + u(0x176) + u(0x22a) + u(0x191) + v(0x1c9) + u(0x225) + u(0x223) + u(0x1b4) + u(0x271) + v(0x27c) + v(0x1a6) + u(0x179) + (v(0x205) + u(0x20c) + v(0x1fc) + u(0x206) + v(0x15c) + u(0x218) + u(0x165) + u(0x25f) + u(0x171) + u(0x152) + u(0x1db) + v(0x195) + v(0x162) + v(0x26d) + v(0x237) + u(0x1d9) + u(0x1d4) + u(0x189) + v(0x241) + v(0x257) + v(0x183) + u(0x1dc) + u(0x1f8) + v(0x1b6) + v(0x1bc) + u(0x259) + u(0x16d) + v(0x181) + u(0x243) + u(0x175) + v(0x1ba) + u(0x234) + v(0x194) + u(0x26b) + u(0x224) + v(0x1ac) + u(0x18b) + u(0x270) + u(0x207) + v(0x24f) + v(0x1aa) + u(0x254) + u(0x19a) + u(0x153) + u(0x1e2) + v(0x1ee) + v(0x170) + u(0x26e) + v(0x22e) + u(0x201) + v(0x265) + v(0x1d0) + u(0x172) + u(0x1fb) + v(0x21c) + u(0x216) + u(0x1b3) + v(0x1de)), DashTicketsAndTimes = async ({
        startDate: f,
        endDate: g,
        tenantId: h,
        userId: i,
        userProfile: j
    }) => {
        const x = u, y = v, l = {};
        l[x(0x262)] = function (q, r) {
            return q == r;
        }, l[y(0x25e)] = x(0x24a);
        const m = l, n = {};
        n[x(0x274)] = h, n[x(0x19c)] = f, n[y(0x1eb)] = g, n[x(0x197)] = i;
        const o = {};
        o[y(0x284) + 'ts'] = n, o[y(0x193)] = sequelize_1[y(0x21f)][y(0x1bf)];
        const p = await database_1[x(0x281)][y(0x1fd)](m[x(0x262)](j, m[y(0x25e)]) ? queryAdmin : query, o);
        return p;
    };
function b(c, d) {
    const e = a();
    return b = function (f, g) {
        f = f - (-0x1e41 + -0x10c + 0x209e);
        let h = e[f];
        return h;
    }, b(c, d);
}
exports[v(0x281)] = DashTicketsAndTimes;
function a() {
    const z = [
        'eferencia,',
        'enantId\x22\x20=',
        ')\x20a\x0a\x20\x20\x20\x20--',
        'contacts\x0a\x20',
        '\x20\x20\x20\x20\x20\x20INNE',
        'from\x20\x22Cont',
        'ia\x0a\x20\x20\x20\x20\x20\x20o',
        'va)\x20qtd_de',
        'der\x20by\x201\x20D',
        '\x20\x20\x20\x20\x20to_ti',
        'userId\x0a\x20\x20\x20',
        'e,\x0a\x20\x20\x20\x20\x20\x20t',
        'ptiva,\x0a\x20\x20\x20',
        '\x20\x20--ROUND(',
        '::timestam',
        '\x20lt\x20ON\x20lt.',
        'defineProp',
        '.\x22tenantId',
        'trunc(\x27day',
        'emand\x22\x20is\x20',
        'SELECT',
        '\x20sum(qtd_d',
        '\x20\x20\x20\x20\x20\x201\x20qt',
        '\x20\x20\x20\x20\x20and\x20l',
        '.\x22closedAt',
        '(1)\x0a\x20\x20\x20\x20\x20\x20',
        '_total_ate',
        '/1000)\x20sta',
        't\x0a\x20\x20\x20\x20INNE',
        'eceptiva,\x0a',
        't.\x22closedA',
        'erencia,\x0a\x20',
        '\x20\x20c.\x22tenan',
        'fault',
        '\x22Tickets\x22\x20',
        '\x200\x20end\x20qtd',
        'oalesce(co',
        'sfer\x27)\x0a\x20\x20)',
        'tDate\x20and\x20',
        '\x20:startDat',
        'en\x201\x20else\x20',
        'startedAtt',
        '\x22\x0a\x20\x20\x20\x20\x20\x20wh',
        'At\x22)\x20dt_re',
        'AVG(tma)::',
        '1\x20else\x200\x20e',
        'estamp(t.\x22',
        ':tenantId\x0a',
        'erval)/60\x20',
        'mp)::inter',
        'ME\x0a\x20\x20from\x20',
        'esc\x0a',
        'demanda_re',
        '\x27,\x20c.\x22crea',
        'tendimento',
        'dDate\x0a\x20\x20\x20\x20',
        'At\x22)::inte',
        '933464pymYuY',
        'Date\x0a\x20\x20\x20\x20\x20',
        'ferencia,\x0a',
        'minutes\x27):',
        ':endDate\x0a\x20',
        'tc.\x22userId',
        '\x20\x20\x20and\x20(lt',
        'endDate',
        'ndanceAt\x22/',
        '.\x22ticketId',
        '\x20\x20and\x20(lt.',
        '3RnUKHA',
        'cimal,0)\x20T',
        'OR\x20lt.\x22typ',
        'rval)/60\x20t',
        'ND(AVG(tma',
        'd\x0a\x20\x20\x20\x20\x20\x20\x20\x20',
        '10820QeSHFE',
        'hen\x201\x20else',
        'entos,\x0a\x20\x20\x20',
        'val)/60\x20tm',
        'TMA,\x0a\x20\x20\x20\x20c',
        '\x20else\x200\x20en',
        'roup\x20by\x20dt',
        '\x20\x20\x20\x20\x20extra',
        'query',
        'extract(ep',
        '\x0a\x20\x20\x20\x20sum(q',
        'anceAt,\x0a\x20\x20',
        '\x22\x20LIKE\x20\x27re',
        '\x22\x20=\x20:userI',
        'ct\x0a\x20\x20\x20\x20\x20\x20d',
        'mand\x22\x20is\x20n',
        'artedAtten',
        'ct(epoch\x20f',
        '\x20date_trun',
        't\x22)\x20dt_ref',
        ',\x0a\x20\x20\x20\x20\x20\x20t.',
        '168061vuuxLn',
        'tedAt\x22)\x20be',
        'danceAt,\x0a\x20',
        '../../data',
        '__esModule',
        ':decimal,0',
        'eatedAt\x22,\x0a',
        'true\x20then\x20',
        '\x20\x20\x20\x20)\x20new_',
        'acts\x22\x20c\x0a\x20\x20',
        'contactId\x22',
        '(qtd_deman',
        'a\x0a\x20\x20\x20\x20\x20\x20or',
        'concat(ROU',
        '_timestamp',
        'td_total_a',
        'group\x20by\x20d',
        '\x22)\x20between',
        '_referenci',
        'd\x20qtd_dema',
        'rue\x20then\x201',
        'QueryTypes',
        'ltc\x20ON\x20ltc',
        'e\x22\x20LIKE\x20\x27r',
        'decimal,0)',
        'losedAt,\x0a\x20',
        '\x20\x20\x20\x20\x20\x20t.\x22t',
        't\x22/1000)\x20c',
        '(AVG(tme):',
        '\x22tenantId\x22',
        'nterval\x20TM',
        '\x20\x20\x20\x20\x20\x20and\x20',
        '\x0a\x20\x20\x20\x20\x20\x20to_',
        '.\x22type\x22\x20LI',
        '1000),\x20t.\x22',
        '\x0a\x20\x20\x20\x20\x20\x20cas',
        'R\x20lt.\x22type',
        'GE(to_time',
        'lt\x20ON\x20lt.\x22',
        ',0),\x200),\x20\x27',
        'al_atendim',
        'ot\x20true\x20th',
        '\x22ticketId\x22',
        '(\x27month\x27,\x20',
        ')\x20TMA,\x0a\x20\x20\x20',
        'AGE(to_tim',
        '--ROUND(AV',
        '\x20and\x20date_',
        'nantId\x22\x20=\x20',
        'ecimal,0)\x20',
        'not\x20true\x20t',
        'ere\x0a\x20\x20\x20\x20\x20\x20',
        '\x20:endDate\x0a',
        '384438DIQDOi',
        'endimentos',
        '/1000),\x20t.',
        '\x20TMA,\x0a\x20\x20\x20\x20',
        'ER\x20JOIN\x20\x22L',
        '\x0a\x20\x20select\x0a',
        'e\x20and\x20:end',
        'Id\x0a\x20\x20\x20\x20\x20\x20\x20',
        'rtedAttend',
        '\x20\x20\x20where\x0a\x20',
        'tartedAtte',
        'admin',
        '\x20\x20\x20\x20extrac',
        '\x20\x20\x20\x20\x20\x20\x20\x20c.',
        'imestamp(t',
        '2461790oiptxJ',
        'c(\x27day\x27,\x20t',
        'and\x20date_t',
        'ween\x20:star',
        ')::decimal',
        'ncat(ROUND',
        't\x22)\x20betwee',
        'value',
        'och\x20from\x20A',
        '\x22createdAt',
        'nda_ativa,',
        '\x22\x0a\x20\x20\x20\x20from',
        'se\x20when\x20t.',
        'ma,\x0a\x20\x20\x20\x20\x20\x20',
        'Desc\x0a',
        'rtDate\x20and',
        'kDnNh',
        'At\x22/1000),',
        'edAt\x22)\x20bet',
        'lect\x20count',
        'MpupF',
        '\x20\x20\x20--ROUND',
        'tween\x20:sta',
        'ceivedTran',
        't\x22/1000),\x20',
        's)\x20qtd_tot',
        'manda_rece',
        '0\x20end\x20qtd_',
        'al)/60\x20tme',
        '\x20\x20\x20\x20where\x0a',
        '\x22isActiveD',
        'poch\x20from\x20',
        'E\x20\x27open\x27\x20O',
        '\x20\x20\x20\x20\x20t.\x22cr',
        '\x0a\x20\x20\x20\x20\x20\x20and',
        'mestamp(t.',
        'mand\x22\x20is\x20t',
        'sequelize',
        'tenantId',
        '(AVG(tma):',
        'KE\x20\x27open\x27\x20',
        'date_trunc',
        'serId\x22\x20=\x20:',
        '\x20\x20\x20\x20\x201\x20qtd',
        'eceivedTra',
        'tc\x20ON\x20tc.\x22',
        '\x22startedAt',
        '\x20and\x20lt.\x22u',
        ',\x20c.\x22creat',
        'da_recepti',
        'd_total_at',
        'default',
        ':interval\x20',
        '\x20\x20\x20\x20--dt_r',
        'replacemen',
        'gTickets\x22\x20',
        'TME\x0a\x20\x20from',
        'dAt\x22)::int',
        'te\x20and\x20:en',
        '\x22\x20=\x20tc.\x22id',
        '\x20=\x20c.\x22id\x22\x0a',
        'ect\x0a\x20\x20\x20\x20\x20\x20',
        'stamp(t.\x22s',
        '\x20\x20\x20\x20\x20t.\x22te',
        'R\x20JOIN\x20\x22Lo',
        'c.\x22id\x22))\x0a\x20',
        'osedAt,\x0a\x20\x20',
        'rom\x20AGE(to',
        '_demanda_r',
        '__importDe',
        'ceptiva,\x0a\x20',
        '\x20coalesce(',
        '\x20\x20\x20\x20to_tim',
        '\x20extract(e',
        '1341JRMhvs',
        'VG(tme)::d',
        '(t.\x22closed',
        '(distinct(',
        'ontacts\x0a\x20\x20',
        'runc(\x27day\x27',
        'NNER\x20JOIN\x20',
        'manda_ativ',
        '\x27month\x27,\x20t',
        '),\x200),\x20\x27mi',
        '\x20\x22Tickets\x22',
        'emanda_ati',
        'anda_ativa',
        '\x22type\x22\x20LIK',
        '\x20t.\x22create',
        '\x20a\x0a\x20\x20\x20\x20--g',
        '948uJMarx',
        'base',
        'ogTickets\x22',
        'reatedAt\x22,',
        'p)::interv',
        'om\x20AGE(to_',
        '\x22/1000)\x20st',
        '\x22/1000)\x20cl',
        '\x20(\x0a\x20\x20\x20\x20sel',
        '(\x0a\x20\x20\x20\x20sele',
        'ndimentos,',
        'nantId\x0a\x20\x20\x20',
        '730244kNtIqm',
        '\x20\x20\x20)\x20new_c',
        '\x20t\x0a\x20\x20\x20\x20INN',
        '\x20c\x0a\x20\x20\x20\x20\x20\x20I',
        '\x22::timesta',
        't(epoch\x20fr',
        'createdAt\x22',
        '\x20\x20\x20\x20\x20\x20to_t',
        'ate_trunc(',
        '1096ZRAsLq',
        'endanceAt\x22',
        'erty',
        '\x20:tenantId',
        '\x20=\x20:tenant',
        'isActiveDe',
        '\x22Contacts\x22',
        't.\x22created',
        'e\x20when\x20t.\x22',
        'timestamp(',
        'a,\x0a\x20\x20\x20\x20sum',
        'type',
        '\x20=\x20t.\x22id\x22\x0a',
        'tma,\x0a\x20\x20\x20\x20\x20',
        '=\x20t.\x22id\x22\x0a\x20',
        'userId',
        '\x0a\x20\x20\x20\x20from\x20',
        '\x20\x20\x20\x20\x20from\x20',
        'n\x20:startDa',
        '(\x27day\x27,\x20t.',
        'startDate',
        'ticketId\x22\x20',
        'E,\x0a\x20\x20\x20\x20(se',
        'nutes\x27)::i',
        '\x20\x20\x20\x20\x20\x20t.\x22c',
        'G(tme)::de',
        'tId\x22\x20=\x20:te',
        'nd\x20qtd_dem',
        't_referenc',
        '\x20--ROUND(A',
        'tendanceAt',
        'nsfer\x27)\x0a\x20\x20',
        'rder\x20by\x201\x20',
        ',\x0a\x20\x20\x20\x20\x20\x20ca',
        '.\x22createdA'
    ];
    a = function () {
        return z;
    };
    return a();
}